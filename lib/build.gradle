/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
	// Apply the java-library plugin for API and implementation separation.
	id 'java-library'
	id "com.diffplug.spotless" version "6.25.0"
	id 'edu.wpi.first.wpilib.repositories.WPILibRepositoriesPlugin' version '2020.2'
	id 'maven-publish'
}

archivesBaseName = 'doglog'

tasks.withType(Javadoc) {
	options {
		docTitle = "DogLog Javadoc"
	}
}

repositories {
	// Use Maven Central for resolving dependencies.
	mavenCentral()
}

if (project.hasProperty('releaseMode')) {
	wpilibRepositories.addAllReleaseRepositories(project)
} else {
	wpilibRepositories.addAllDevelopmentRepositories(project)
}

dependencies {
	implementation 'edu.wpi.first.ntcore:ntcore-java:2025.+'
	implementation 'edu.wpi.first.wpilibj:wpilibj-java:2025.+'
	implementation 'edu.wpi.first.wpiutil:wpiutil-java:2025.+'
	implementation 'edu.wpi.first.hal:hal-java:2025.+'
}

publishing {
	publications {
		maven(MavenPublication) {
			from components.java
			groupId = "com.github.jonahsnider"
			artifactId = "doglog"
		}
	}
}

java {
	withSourcesJar()
	withJavadocJar()
}

apply plugin: 'groovy'
spotless {
	enforceCheck false

	encoding 'UTF-8'
	lineEndings 'UNIX'

	java {
		licenseHeader '// Copyright (c) FIRST and other WPILib contributors.\n' +
				'// Open Source Software; you can modify and/or share it under the terms of\n' +
				'// the WPILib BSD license file in the root directory of this project.\n\n'
		toggleOffOn()
		importOrder()
		removeUnusedImports()
		googleJavaFormat()
		trimTrailingWhitespace()
		endWithNewline()
	}

	groovy {
		importOrder()
		excludeJava()
		greclipse()
	}

	groovyGradle {
		greclipse()
	}

	json {
		target '**/*.json'
		simple().indentWithSpaces(2)
	}

	format 'misc', {
		target '.gitignore'

		trimTrailingWhitespace()
		endWithNewline()
	}
}
