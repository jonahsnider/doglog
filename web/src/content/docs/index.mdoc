---
title: Home
description: Simpler logging for FRC
template: splash
hero:
  title: DogLog
  tagline: Simpler logging for FRC
  image:
    file: ../../assets/logo.svg
  actions:
    - text: Get started
      link: /getting-started/installation
      icon: right-arrow
      variant: primary
    - text: Javadoc
      link: https://javadoc.doglog.dev
      icon: external
      variant: minimal
---

{% cardgrid stagger=true %}
{% card title="Get started in seconds" icon="puzzle" %}
Add the vendordep and start logging, no configuration or setup boilerplate needed
{% /card %}

{% card title="Performance where it counts" icon="rocket" %}
DogLog was designed for fast logging, powered by WPILib's highly optimized `DataLogManager` API
{% /card %}

{% card title="Configurable to the core" icon="setting" %}
Customize practically all logger behavior with a simple, yet powerful, configuration API
{% /card %}

{% card title="Log with confidence" icon="approve-check-circle" %}
DogLog was created to address the lack of a safe and fault-tolerant logging solution for FRC, without sacrificing
developer experience
{% /card %}
{% /cardgrid %}

## Example usage

```java
// Import
import dev.doglog.DogLog;
import dev.doglog.DogLogOptions;

// Configure (optional)
DogLog.setOptions(new DogLogOptions().withCaptureDs(true));

// Log
DogLog.log("Arm/Position", motor.getPosition().getValue());
```

## Quick start

Jump straight in and try DogLog for yourself.
Add to your project now via the WPILib VS Code extension, or manually with the vendordep URL:

```text
https://doglog.dev/vendordep.json
```
